#! /usr/bin/env python
#  -*- coding: utf-8 -*-
# filipemarch
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Mar 04, 2021 11:34:57 PM -03  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import calculadora_bin_to_dec_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    calculadora_bin_to_dec_support.set_Tk_var()
    top = Toplevel1 (root)
    calculadora_bin_to_dec_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    calculadora_bin_to_dec_support.set_Tk_var()
    top = Toplevel1 (w)
    calculadora_bin_to_dec_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("424x598+816+191")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("Calculadora Top")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.059, rely=0.172, relheight=0.548, relwidth=0.42)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.281, rely=0.866, height=31, width=81)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(command=calculadora_bin_to_dec_support.bin_to_dec)
        self.Button1.configure(text='''Converter''')

        self.Entry1 = tk.Entry(self.Frame1)
        self.Entry1.place(relx=0.169, rely=0.655, height=23, relwidth=0.652)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="blue")
        self.Entry1.configure(selectforeground="white")

        self.result_label = tk.Label(self.Frame1)
        self.result_label.place(relx=0.062, rely=0.341, height=25, width=156)
        self.result_label.configure(activebackground="#f9f9f9")
        self.result_label.configure(text='''result''')
        self.result_label.configure(textvariable=calculadora_bin_to_dec_support.result_label)

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.051, rely=0.034, height=20, width=159)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Binário para Decimal''')

        self.Frame1_1 = tk.Frame(top)
        self.Frame1_1.place(relx=0.495, rely=0.172, relheight=0.548
                , relwidth=0.443)
        self.Frame1_1.configure(relief='groove')
        self.Frame1_1.configure(borderwidth="2")
        self.Frame1_1.configure(relief="groove")

        self.Button1_1 = tk.Button(self.Frame1_1)
        self.Button1_1.place(relx=0.282, rely=0.866, height=31, width=81)
        self.Button1_1.configure(activebackground="#f9f9f9")
        self.Button1_1.configure(command=calculadora_bin_to_dec_support.dec_to_bin)
        self.Button1_1.configure(text='''Converter''')

        self.Entry1_1 = tk.Entry(self.Frame1_1)
        self.Entry1_1.place(relx=0.17, rely=0.655, height=23, relwidth=0.617)
        self.Entry1_1.configure(background="white")
        self.Entry1_1.configure(font="TkFixedFont")
        self.Entry1_1.configure(selectbackground="blue")
        self.Entry1_1.configure(selectforeground="white")

        self.result_label_1 = tk.Label(self.Frame1_1)
        self.result_label_1.place(relx=0.064, rely=0.341, height=25, width=164)
        self.result_label_1.configure(activebackground="#f9f9f9")
        self.result_label_1.configure(text='''result''')
        self.result_label_1.configure(textvariable=calculadora_bin_to_dec_support.result_label2)

        self.Label1_1 = tk.Label(self.Frame1_1)
        self.Label1_1.place(relx=0.053, rely=0.034, height=20, width=167)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(text='''Decimal para Binário''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.167, rely=0.079, height=19, width=283)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Conversão''')

if __name__ == '__main__':
    vp_start_gui()





